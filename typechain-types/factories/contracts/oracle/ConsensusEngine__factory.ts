/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ConsensusEngine,
  ConsensusEngineInterface,
} from "../../../contracts/oracle/ConsensusEngine";

const _abi = [
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "ConsensusAlreadyProcessed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDataArray",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "received",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "required",
        type: "uint8",
      },
    ],
    name: "InsufficientVotes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "method",
        type: "string",
      },
    ],
    name: "InvalidAggregationMethod",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "InvalidOutlierThreshold",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "threshold",
        type: "uint8",
      },
    ],
    name: "InvalidThreshold",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "NodeAlreadyVoted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "NodeNotEligible",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "RoundNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "oldMethod",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newMethod",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AggregationMethodChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nodeManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ConsensusEngineInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "totalVotes",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "requiredVotes",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "ConsensusFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "finalCexFees",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "finalDexFees",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "participatingNodes",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "agreementPercentage",
        type: "uint8",
      },
    ],
    name: "ConsensusReached",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deviation",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "OutlierDetected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "updatedBy",
        type: "address",
      },
    ],
    name: "OutlierThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "oldThreshold",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "newThreshold",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "updatedBy",
        type: "address",
      },
    ],
    name: "ThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "cexFees",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "dexFees",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "weight",
        type: "uint8",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_AGGREGATION_METHOD",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_CONSENSUS_THRESHOLD",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_OUTLIER_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NODE_MANAGER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORACLE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "aggregateData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "aggregatedCexFees",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "aggregatedDexFees",
            type: "uint256[]",
          },
          {
            internalType: "uint8",
            name: "confidence",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "variance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "method",
            type: "string",
          },
        ],
        internalType: "struct IConsensusEngine.AggregationResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "data1",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "data2",
        type: "uint256[]",
      },
    ],
    name: "calculateDeviation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "cexFees",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dexFees",
        type: "uint256[]",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "detectOutliers",
    outputs: [
      {
        internalType: "address[]",
        name: "outliers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "finalizeRound",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "cexFees",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "dexFees",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "consensusReached",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "participatingNodes",
            type: "uint8",
          },
        ],
        internalType: "struct IQuantlinkOracle.FeeData",
        name: "finalData",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAggregationMethod",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "getAggregationResult",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "aggregatedCexFees",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "aggregatedDexFees",
            type: "uint256[]",
          },
          {
            internalType: "uint8",
            name: "confidence",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "variance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "method",
            type: "string",
          },
        ],
        internalType: "struct IConsensusEngine.AggregationResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "getConsensusStats",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "totalVotes",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "requiredVotes",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "consensusReached",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "agreementPercentage",
            type: "uint8",
          },
          {
            internalType: "address[]",
            name: "outlierNodes",
            type: "address[]",
          },
        ],
        internalType: "struct IConsensusEngine.ConsensusStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConsensusThreshold",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "getCurrentRoundVotes",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "voter",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "cexFees",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "dexFees",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "weight",
            type: "uint8",
          },
        ],
        internalType: "struct IConsensusEngine.Vote[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequiredVotes",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "getVoteWeight",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "hasNodeVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nodeManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "isConsensusReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nodeManager",
    outputs: [
      {
        internalType: "contract INodeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "processConsensus",
    outputs: [
      {
        internalType: "bool",
        name: "consensusReached",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "resetRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "method",
        type: "string",
      },
    ],
    name: "setAggregationMethod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "newThreshold",
        type: "uint8",
      },
    ],
    name: "setConsensusThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "setOutlierDetectionThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0806040523460295730608052614040908161002f8239608051818181610e380152610edd0152f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714611cc45750806303a989a814611c9357806307e2cea514611c58578063248a9ca314611c3a5780632ecabf7414611b325780632f2ff15d14611b015780633469f6e2146118c857806335db32c2146114f457806336568abe146114ae5780633b1d3bc21461147b578063485cc955146110da5780634e37014f146110a35780634f1ef28614610e8f57806352d1902d14610e2557806354fd4d5014610dde5780635c975abb14610d9c5780636639787214610d805780637031ff7b14610d0b57806371c16ac614610c7857806375b238fc14610c3d5780637b788b7f146103d55780637c12ba3814610bf05780639109484214610bd457806391d1485414610b7a57806399d0653b14610b2c5780639bb5cd3f14610b03578063a217fddf14610ae7578063a730117e14610ab9578063ad3cb1cc14610a72578063b32089121461090b578063bfda27ab146106b0578063c0dfef9414610436578063cf1f16b8146103f7578063d1e54943146103da578063d42791e1146103d5578063d547741f1461039d578063d59f9fe014610362578063f2beda3b146102da5763ff78ad4f146101cc57600080fd5b346102d55760203660031901126102d5576101e5612f5b565b506004356000526006602052604060002060405161020281611e6b565b815460ff81168252602082019060ff8160081c1682526001604084019460ff8360101c161515865260ff606086019360181c168352019160405192836020825491828152019160005260206000209060005b8181106102b65760ff886102b289838a8e828c610273868e0387611e86565b6080880195865260405198899860208a5251166020890152511660408701525115156060860152511660808401525160a08084015260c0830190611f47565b0390f35b82546001600160a01b0316845260209093019260019283019201610254565b600080fd5b346102d55760203660031901126102d55760043560ff81168091036102d557610301613063565b80151580610357575b61031390612b91565b600054908060ff1983161760005560ff6040519216825260208201527f44d35a16d2fd3721854987a9c3018bdeae35a4c1b1ff5056d889cc7c29bad0f660403392a2005b50600a81111561030a565b346102d55760003660031901126102d55760206040517fdaf9ac3a6308052428e8806fd908cf472318416ed7d78b3f35dd94bbbafde56a8152f35b346102d55760403660031901126102d5576103d36004356103bc611d47565b906103ce6103c982611f84565b6130d5565b613724565b005b611ef9565b346102d55760003660031901126102d55760206040516107d08152f35b346102d55760003660031901126102d5576102b26040516104228161041b81612069565b0382611e86565b604051918291602083526020830190611da7565b346102d55760203660031901126102d5576004356001600160401b0381116102d557366023820112156102d55780600401356001600160401b0381116102d5576024820136602483850101116102d55761048e613063565b610499368383611ec2565b602081519101206104a8611f1a565b602081519101208114159081610696575b81610669575b5061064057604051916104dc836104d581612069565b0384611e86565b6000936104f3826104ee60025461202f565b6124c6565b8490601f831160011461058d57928261054d817f1eab38e6fd39e0295479ebdb4b87559ecfe5cb184caa9e239fcea68111ff0844979561057395610565988b9261057f575b50508160011b916000199060031b1c19161790565b6002555b604051948594606086526060860190611da7565b918483036020860152612f3a565b4260408301520390a180f35b602492500101358a80610538565b600286527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace91601f198416875b818110610625575092610565959285927f1eab38e6fd39e0295479ebdb4b87559ecfe5cb184caa9e239fcea68111ff084498966105739610610608575b505050600181811b01600255610551565b0160240135600019600384901b60f8161c191690558780806105f7565b919360206001819260248888010135815501950192016105ba565b604051630cc64b1160e11b815260206004820152918291610665916024840191612f3a565b0390fd5b90506006602060405161067d604082611e86565b828152016536b2b234b0b760d11b8152201415846104bf565b90506106a0612498565b60208151910120811415906104b9565b346102d55760203660031901126102d5576004356106cc613063565b8060005260046020526040600020805490600081558161089f575b505080600052600660205261070660016040600020600081550161221a565b8060005260076020526004604060002061071f8161221a565b61072b6001820161221a565b600060028201556000600382015501610744815461202f565b908161085b575b5050806000526008602052604060002060ff198154169055806000526004602052604060002090815461077d8161218d565b9261078b6040519485611e86565b818452602084019060005260206000206000915b8383106107f857858560005b82518110156103d357600190826000526005602052604080600020838060a01b036107d68488612518565b51511690600091858060a01b031682526020522060ff198154169055016107ab565b6005602060019260405161080b81611e6b565b848060a01b038654168152610821858701611fe2565b8382015261083160028701611fe2565b60408201526003860154606082015260ff600487015416608082015281520192019201919061079f565b81601f600093116001146108735750555b818061074b565b8183526020832061088f91601f0160051c810190600101612203565b808252816020812091555561086c565b816005029160058304036108f5576000526020600020908101905b818110156106e757806000600592556108d56001820161221a565b6108e16002820161221a565b6000600382015560006004820155016108ba565b634e487b7160e01b600052601160045260246000fd5b346102d55760203660031901126102d557600435600052600460205260406000208054906109388261218d565b916109466040519384611e86565b80835260208301809260005260206000206000915b838310610a0f57848660405191829160208301906020845251809152604083019060408160051b85010192916000905b82821061099a57505050500390f35b919360019193955060208091603f19898203018552875190848060a01b038251168152608060ff816109ee6109dc8787015160a08988015260a0870190611d73565b60408701518682036040880152611d73565b9460608101516060860152015116910152960192019201859493919261098b565b60056020600192604051610a2281611e6b565b848060a01b038654168152610a38858701611fe2565b83820152610a4860028701611fe2565b60408201526003860154606082015260ff600487015416608082015281520192019201919061095b565b346102d55760003660031901126102d5576102b26040805190610a958183611e86565b60058252640352e302e360dc1b602083015251918291602083526020830190611da7565b346102d55760203660031901126102d5576020610adc610ad7611d5d565b612ea6565b60ff60405191168152f35b346102d55760003660031901126102d557602060405160008152f35b346102d55760003660031901126102d5576003546040516001600160a01b039091168152602090f35b346102d55760203660031901126102d5576004358015610b6657610b526102b291612c12565b604051918291602083526020830190611f47565b63f8ae813760e01b60005260045260246000fd5b346102d55760403660031901126102d557610b93611d47565b600435600052600080516020613fcb83398151915260205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346102d55760003660031901126102d5576102b2610422611f1a565b346102d55760403660031901126102d557610c09611d47565b600435600052600560205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346102d55760003660031901126102d55760206040517fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758152f35b346102d55760203660031901126102d557610c91612296565b5060043560005260076020526102b260406000206004610cfa60405192610cb784611e6b565b610cc081611fe2565b8452610cce60018201611fe2565b602085015260ff60028201541660408501526003810154606085015261041b604051809481930161210a565b608082015260405191829182611de8565b346102d55760203660031901126102d557600435610d27613063565b80151580610d74575b610d3990612b91565b600154908060015560405191825260208201527f6414b7da6bfda05bdf3f8ba3a5570024f655fdc0a2d6f86cb55d6436db2fb6ac60403392a2005b50611388811115610d30565b346102d55760003660031901126102d557602060405160068152f35b346102d55760003660031901126102d557602060ff7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330054166040519015158152f35b346102d55760003660031901126102d5576102b26040805190610e018183611e86565b60058252640312e302e360dc1b602083015251918291602083526020830190611da7565b346102d55760003660031901126102d5577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610e7e576020604051600080516020613fab8339815191528152f35b63703e46dd60e11b60005260046000fd5b60403660031901126102d557610ea3611d5d565b6024356001600160401b0381116102d557366023820112156102d557610ed3903690602481600401359101611ec2565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115611080575b50610e7e57610f15613063565b6040516352d1902d60e01b81526001600160a01b0383169290602081600481875afa6000918161104c575b50610f5a5783634c9c8ce360e01b60005260045260246000fd5b80600080516020613fab8339815191528592036110385750813b1561102457600080516020613fab83398151915280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511561100a576000808360206103d395519101845af43d15611002573d91610fe583611ea7565b92610ff36040519485611e86565b83523d6000602085013e613f49565b606091613f49565b50503461101357005b63b398979f60e01b60005260046000fd5b634c9c8ce360e01b60005260045260246000fd5b632a87526960e21b60005260045260246000fd5b9091506020813d602011611078575b8161106860209383611e86565b810103126102d557519085610f40565b3d915061105b565b600080516020613fab833981519152546001600160a01b03161415905083610f08565b346102d55760203660031901126102d5576004356110bf612ff1565b8015610b66576110d060209161252c565b6040519015158152f35b346102d55760403660031901126102d5576110f3611d5d565b6110fb611d47565b90600080516020613feb833981519152549060ff8260401c1615916001600160401b03811680159081611473575b6001149081611469575b159081611460575b5061144f5767ffffffffffffffff198116600117600080516020613feb8339815191525582611422575b506001600160a01b0381169283156113e5576001600160a01b03169081156113a0576111e690611193613e9f565b61119b613e9f565b6111a3613e9f565b6111ab613e9f565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00556111d7613e9f565b6111e08161311f565b506131d1565b50600660ff1960005416176000556107d0600155611202611f1a565b9283516001600160401b03811161138a57611222816104ee60025461202f565b602094601f8211600114611306576112559293949582916000926112fb5750508160011b916000199060031b1c19161790565b6002555b816bffffffffffffffffffffffff60a01b60035416176003557f4a3e90f3ccd369f22e79c67890ee1087de111a46a58e4a4be004376f955a0e086020604051428152a36112a257005b68ff000000000000000019600080516020613feb8339815191525416600080516020613feb833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508680610538565b601f1982169560026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9160005b88811061137257508360019596979810611359575b505050811b01600255611259565b015160001960f88460031b161c1916905585808061134b565b91926020600181928685015181550194019201611336565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206e6f6465206d616e616765722061646472657373000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b6044820152606490fd5b68ffffffffffffffffff19166801000000000000000117600080516020613feb8339815191525583611165565b63f92ee8a960e01b60005260046000fd5b9050158561113b565b303b159150611133565b849150611129565b346102d55760203660031901126102d5576102b26114a260043561149d612296565b6122c2565b60405191829182611de8565b346102d55760403660031901126102d5576114c7611d47565b336001600160a01b038216036114e3576103d390600435613724565b63334bd91960e11b60005260046000fd5b346102d55760803660031901126102d557600435611510611d47565b906044356001600160401b0381116102d557611530903690600401611d17565b92906064356001600160401b0381116102d557611551903690600401611d17565b61155c959195612ff1565b84156118b357846000526005602052604060002060018060a01b03851660005260205260ff6040600020541661189157600354604051631db1e56d60e11b81526001600160a01b0386811660048301819052969260209183916024918391165afa90811561188557600091611843575b501561182e576115f16115e03685876121a4565b6115eb36858b6121a4565b90613348565b51156117f65761160090612ea6565b956040519161160e83611e6b565b85835261161c3685876121a4565b926020810193845261162f3683856121a4565b9860408201998a526060820142815260ff608084019216958683528a60005260046020526040600020805490600160401b82101561138a57600182018082558210156117e057600052600560206000209102019360018060a01b039051166bffffffffffffffffffffffff60a01b855416178455600184019051908151916001600160401b03831161138a576020906116c8848461223e565b0190600052602060002060005b8381106117cc5750505050600283019a518051906001600160401b03821161138a57602090611704838f61223e565b019b60005260206000209b6000905b8282106117b8575050509160ff6004816117ad96947fe599407bc41fa4aceedc2e21a26396da4f896553cf7c97fd86862d7feb950ed09b9a99989651600386015551169201911660ff198254161790558860005260056020526040600020886000526020526040600020600160ff1982541617905561179f604051968796606088526060880191612272565b918583036020870152612272565b9060408301520390a3005b80518e830155600190910190602001611713565b6001906020845194019381840155016116d5565b634e487b7160e01b600052603260045260246000fd5b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420666565206461746160801b6044820152606490fd5b84636f2e99c760e01b60005260045260246000fd5b6020813d60201161187d575b8161185c60209383611e86565b8101031261187957519081151582036118765750886115cc565b80fd5b5080fd5b3d915061184f565b6040513d6000823e3d90fd5b50505063c826adbb60e01b60005260018060a01b031660045260245260446000fd5b8463f8ae813760e01b60005260045260246000fd5b346102d55760203660031901126102d557600435600060a06040516118ec81611e50565b606081526060602082015282604082015282606082015282608082015201528015610b665780600052600860205260ff6040600020541615611ac45780600052600760205260406000206040519161194383611e6b565b61194c82611fe2565b8352600461198e61195f60018501611fe2565b936020860194855260ff60028201541660408701526003810154606087015261041b604051809481930161210a565b6080840152600052600660205260406000206001604051916119af83611e6b565b60ff81548181168552818160081c166020860152818160101c161515604086015260181c1660608401520160405190816020825491828152019160005260206000209060005b818110611aa557505050611a729482611a1360ff9485940382611e86565b608085015251935192511660405193611a2b85611e50565b845260208401928352604084019242845260608501438152611a8560808701926001845260a0880194855260405198899860208a525160c060208b015260e08a0190611d73565b9051888203601f190160408a0152611d73565b9451606087015251608086015251151560a0850152511660c08301520390f35b82546001600160a01b03168452602090930192600192830192016119f5565b60405162461bcd60e51b815260206004820152601560248201527410dbdb9cd95b9cdd5cc81b9bdd081c995858da1959605a1b6044820152606490fd5b346102d55760403660031901126102d5576103d3600435611b20611d47565b90611b2d6103c982611f84565b61329f565b346102d55760403660031901126102d5576004356001600160401b0381116102d557611b62903690600401611d17565b906024356001600160401b0381116102d557611b82903690600401611d17565b9190828403611bfd5791906000926000925b858410611bc25785858115611bb757602091611baf91611fc2565b604051908152f35b505060206000611baf565b90919293611bf3600191611bed611bda888a89611fa5565b35611be6898789611fa5565b3590612f96565b90611fb5565b9401929190611b94565b60405162461bcd60e51b8152602060048201526015602482015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b6044820152606490fd5b346102d55760203660031901126102d5576020611baf600435611f84565b346102d55760003660031901126102d55760206040517f68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef18152f35b346102d55760203660031901126102d5576004356000526008602052602060ff604060002054166040519015158152f35b346102d55760203660031901126102d5576004359063ffffffff60e01b82168092036102d557602091637965db0b60e01b8114908115611d06575b5015158152f35b6301ffc9a760e01b14905083611cff565b9181601f840112156102d5578235916001600160401b0383116102d5576020808501948460051b0101116102d557565b602435906001600160a01b03821682036102d557565b600435906001600160a01b03821682036102d557565b906020808351928381520192019060005b818110611d915750505090565b8251845260209384019390920191600101611d84565b919082519283825260005b848110611dd3575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201611db2565b90611e4d91602081526080611e22611e0c845160a0602086015260c0850190611d73565b6020850151848203601f19016040860152611d73565b9260ff604082015116606084015260608101518284015201519060a0601f1982850301910152611da7565b90565b60c081019081106001600160401b0382111761138a57604052565b60a081019081106001600160401b0382111761138a57604052565b90601f801991011681019081106001600160401b0382111761138a57604052565b6001600160401b03811161138a57601f01601f191660200190565b929192611ece82611ea7565b91611edc6040519384611e86565b8294818452818301116102d5578281602093846000960137010152565b346102d55760003660031901126102d557602060ff60005416604051908152f35b60405190611f29604083611e86565b600f82526e3bb2b4b3b43a32b22fb6b2b234b0b760891b6020830152565b906020808351928381520192019060005b818110611f655750505090565b82516001600160a01b0316845260209384019390920191600101611f58565b600052600080516020613fcb83398151915260205260016040600020015490565b91908110156117e05760051b0190565b919082018092116108f557565b8115611fcc570490565b634e487b7160e01b600052601260045260246000fd5b906040519182815491828252602082019060005260206000209260005b81811061201657505061201492500383611e86565b565b8454835260019485019487945060209093019201611fff565b90600182811c9216801561205f575b602083101461204957565b634e487b7160e01b600052602260045260246000fd5b91607f169161203e565b600254600092916120798261202f565b80825291600181169081156120ee5750600114612094575050565b600260009081529293509091907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8383106120d4575060209250010190565b6001816020929493945483858701015201910191906120c3565b9050602093945060ff929192191683830152151560051b010190565b6000929181549161211a8361202f565b8083529260018116908115612170575060011461213657505050565b60009081526020812093945091925b838310612156575060209250010190565b600181602092949394548385870101520191019190612145565b915050602093945060ff929192191683830152151560051b010190565b6001600160401b03811161138a5760051b60200190565b9291906121b08161218d565b936121be6040519586611e86565b602085838152019160051b81019283116102d557905b8282106121e057505050565b81358152602091820191016121d4565b818102929181159184041417156108f557565b81811061220e575050565b60008155600101612203565b80546000825580612229575050565b61201491600052602060002090810190612203565b90600160401b811161138a5781549080835581811061225c57505050565b6120149260005260206000209182019101612203565b81835290916001600160fb1b0383116102d55760209260051b809284830137010190565b604051906122a382611e6b565b6060608083828152826020820152600060408201526000838201520152565b508015610b665760009081526004602052604081209081546122e38161218d565b926122f16040519485611e86565b81845282526020808320839185015b83831061243557505050508151156123f8576040516123228161041b81612069565b60208151910120612331611f1a565b6020815191012014600014612389575061235d61234c612296565b9161235681613919565b8352613b7f565b602082015260556040820152600060608201525b6040516123818161041b81612069565b608082015290565b6040516123998161041b81612069565b602081519101206123a8612498565b60208151910120146000146123c657506123c1906137c4565b612371565b6123e26123d1612296565b926123db81613919565b8452613b7f565b6020830152604b60408301526060820152612371565b60405162461bcd60e51b81526020600482015260156024820152744e6f20766f74657320746f2061676772656761746560581b6044820152606490fd5b6005602060019260405161244881611e6b565b848060a01b03865416815261245e858701611fe2565b8382015261246e60028701611fe2565b60408201526003860154606082015260ff6004870154166080820152815201920192019190612300565b604051906124a7604083611e86565b601082526f77656967687465645f6176657261676560801b6020830152565b90601f82116124d3575050565b6120149160026000526020600020906020601f840160051c83019310612501575b601f0160051c0190612203565b90915081906124f4565b8051156117e05760200190565b80518210156117e05760209160051b010190565b80600052600860205260ff60406000205416612b7d57806000526004602052604060002090815461255c8161218d565b9261256a6040519485611e86565b818452602084019060005260206000206000915b838310612b1a5750505050815160ff60005416808210612ab557505060008115612aa357506125ac81612c12565b60ff6125b6612f5b565b935116808452602084019360068552608081019183835260ff845116900360ff81116108f557815160ff1615612a9b57606460ff82160260ff81169081036108f55760ff835116908115611fcc5704925b60ff6060840194169182855260ff80895116911610159182612a8f575b506040830191151582528560005260066020526001604060002060ff808651161660ff198254161781558851815462ff00008651151560101b169061ff0063ff0000008a5160181b169360081b169063ffffff0019161717178155019051908151916001600160401b03831161138a5790602083926126a58a96958461223e565b0190600052602060002060005b838110612a6f575050505051151595816000526008602052604060002060ff1981541660ff8916179055866000146129fb57506126f19061149d612296565b9184600052600760205260406000209183518051906001600160401b03821161138a57602090612721838761223e565b0184600052602060002060005b8381106129e75750505050600183019260208501938451908151916001600160401b03831161138a57602090612764848461223e565b0190600052602060002060005b8381106129d3575050505060049060ff60408701511660ff60028301911660ff1982541617905560608601516003820155019360808101519485516001600160401b03811161138a5788966127c6835461202f565b601f81116129a1575b50602090601f83116001146129085761285196947fe5e1da2f970d17d1be05dafd5f74acbecd82e02aa7a368f17f8aa2cf885ac1a39896946128308561285f9660ff9687966000926128fd5750508160011b916000199060031b1c19161790565b90555b51955193511693511691604051958695608087526080870190611d73565b908582036020870152611d73565b91604084015260608301520390a25b60005b81518110156128f757600190836001600160a01b036128908386612518565b51167fdec70ce927d6ab976a9a496440c4211d72824845a4a3e50f1998ad8c8043d76f60806040516000815260406020820152601c60408201527f537461746973746963616c206f75746c696572206465746563746564000000006060820152a301612871565b50505090565b015190503880610538565b90601f1983169184600052816000209260005b81811061298657509460018560ff9586956128519c9a9561285f997fe5e1da2f970d17d1be05dafd5f74acbecd82e02aa7a368f17f8aa2cf885ac1a39f9d9b1061296d575b505050811b019055612833565b015160001960f88460031b161c19169055388080612960565b8284015185558d9b506001909401936020938401930161291b565b6129cd90846000526020600020601f850160051c8101916020861061250157601f0160051c0190612203565b386127cf565b600190602084519401938184015501612771565b60019060208451940193818401550161272e565b60a091935060ff807f77ededed61c87e1c0f6d33f4d404eaa23a21bf8bd42dcdd7a5674597de38f5bf945116915116604051918252602082015260606040820152601b60608201527f41677265656d656e74207468726573686f6c64206e6f74206d657400000000006080820152a261286e565b82516001600160a01b0316818301558995506020909201916001016126b2565b603c1115915038612624565b600092612607565b60249163f8ae813760e01b8252600452fd5b7f77ededed61c87e1c0f6d33f4d404eaa23a21bf8bd42dcdd7a5674597de38f5bf9293509060a09160ff604051921682526020820152606060408201526012606082015271496e73756666696369656e7420766f74657360701b6080820152a2600090565b60056020600192604051612b2d81611e6b565b848060a01b038654168152612b43858701611fe2565b83820152612b5360028701611fe2565b60408201526003860154606082015260ff600487015416608082015281520192019201919061257e565b63c546252160e01b60005260045260246000fd5b15612b9857565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081d1a1c995cda1bdb19607a1b6044820152606490fd5b90612bdb8261218d565b612be86040519182611e86565b8281528092612bf9601f199161218d565b0190602036910137565b60001981146108f55760010190565b60005260046020526040600020908154612c2b8161218d565b92612c396040519485611e86565b818452602084019060005260206000206000915b838310612e4357505050506003825110612e2757612c6a82613919565b612c7383613b7f565b92612c7e8151612bd1565b9060008093600154905b8351861015612ddd57600096875b6020612ca28988612518565b51015151811080612dd3575b15612dca5783612ce1612ccf836020612cc78d8c612518565b510151612518565b51612cda8487612518565b5190612f96565b11612cf457612cef90612c03565b612c96565b509590965060015b8015612d40575b90600191612d14575b019495612c88565b818060a01b03612d248287612518565b515116612d3a612d3386612c03565b9588612518565b52612d0c565b979192939495909660005b6040612d578a89612518565b51015151811080612dc0575b15612db05784612d87612d7c836040612cc78e8d612518565b51612cda8488612518565b11612d9a57612d9590612c03565b612d4b565b509660018092979695949399505b909150612d03565b5096600191969594939298612da8565b5083518110612d63565b50959096612cfc565b5082518110612cae565b50509250509250612ded81612bd1565b9060005b818110612dff575090925050565b6001906001600160a01b03612e148288612518565b5116612e208286612518565b5201612df1565b9050604051612e37602082611e86565b60008152600036813790565b60056020600192604051612e5681611e6b565b848060a01b038654168152612e6c858701611fe2565b83820152612e7c60028701611fe2565b60408201526003860154606082015260ff6004870154166080820152815201920192019190612c4d565b60035460405163702e1fc160e01b81526001600160a01b0392831660048201529160209183916024918391165afa90811561188557600091612efd575b5060ff600a91160460ff811615600014611e4d5750600190565b6020813d602011612f32575b81612f1660209383611e86565b8101031261187957519060ff82168203611876575060ff612ee3565b3d9150612f09565b908060209392818452848401376000828201840152601f01601f1916010190565b60405190612f6882611e6b565b60606080836000815260006020820152600060408201526000838201520152565b919082039182116108f557565b8115612fde578180821115612fce57612fae91612f89565b905b61271082029180830461271014901517156108f557611e4d91611fc2565b90612fd891612f89565b90612fb0565b15159050612feb57600090565b61271090565b3360009081527f0b45fb0a7d123af421db170fce034e3ce3a70e5f1150428004face1400c458f2602052604090205460ff161561302a57565b63e2517d3f60e01b600052336004527f68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef160245260446000fd5b3360009081527fb16e88c42fd4e48df2dd6a2eabd6bc9aec654ec170056b470819f8892cc6431c602052604090205460ff161561309c57565b63e2517d3f60e01b600052336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260446000fd5b6000818152600080516020613fcb8339815191526020908152604080832033845290915290205460ff16156131075750565b63e2517d3f60e01b6000523360045260245260446000fd5b6001600160a01b03811660009081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166131cb576001600160a01b031660008181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b50600090565b6001600160a01b03811660009081527fb16e88c42fd4e48df2dd6a2eabd6bc9aec654ec170056b470819f8892cc6431c602052604090205460ff166131cb576001600160a01b031660008181527fb16e88c42fd4e48df2dd6a2eabd6bc9aec654ec170056b470819f8892cc6431c60205260408120805460ff191660011790553391907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b6000818152600080516020613fcb833981519152602090815260408083206001600160a01b038616845290915290205460ff16613341576000818152600080516020613fcb833981519152602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5050600090565b604051608081018181106001600160401b0382111761138a5760409081526000808352606060208401818152928401829052830152816040519161016061338f8185611e86565b600a8452839190601f190160005b81811061370e575050526000918451158015613705575b6136b4575050600383511080156136a9575b613650575b60328351118015613645575b6135f3575b60005b83518110156135ea576127106133f58286612518565b5111613403576001016133df565b5090919261346260208401519261341981612c03565b93604061342881519182611e86565b601781527f434558206665652065786365656473206d6178696d756d000000000000000000602082015261345c8383612518565b52612518565b505b60005b81518110156135d85761271061347d8284612518565b511161348b57600101613467565b50611bed61350284956134ed602061350896970151966134aa81612c03565b9760406134b981519182611e86565b601781527f444558206665652065786365656473206d6178696d756d000000000000000000602082015261345c8383612518565b505b6134f881613d89565b6060880152613d89565b91613d89565b60011c806135a0575060645b60408301526135228161218d565b61352f6040519182611e86565b818152601f1961353e8361218d565b0160005b81811061358f57505060005b8281106135615750602083015215815290565b806135726001926020870151612518565b5161357d8285612518565b526135888184612518565b500161354e565b806060602080938601015201613542565b6103e88111156135b257506000613514565b600a9004606403606481111561351457634e487b7160e01b600052601160045260246000fd5b50611bed6135026135089394956134ef565b50909192613464565b61363f60208301519161360581612c03565b92604051613614604082611e86565b6014815273546f6f206d616e79206461746120706f696e747360601b602082015261345c8383612518565b506133dc565b5060328451116133d7565b5060208101516136a360019160405161366a604082611e86565b601881527f496e73756666696369656e74206461746120706f696e74730000000000000000602082015261369d8261250b565b5261250b565b506133cb565b5060038451106133c6565b91935093506136ff91506040516136cc604082611e86565b601d81527f456d707479206461746120617272617973206e6f7420616c6c6f776564000000602082015261369d8261250b565b50815290565b508551156133b4565b606060208281949596010152019084929161339d565b6000818152600080516020613fcb833981519152602090815260408083206001600160a01b038616845290915290205460ff1615613341576000818152600080516020613fcb833981519152602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6137cc612296565b90805115613915576137dd81613e22565b6137e681612bd1565b83526137f181612bd1565b90602084019182526000925b8184106138195750505050605060408201526000606082015290565b600080938193825b84518110156138c85761384660ff608061383b8489612518565b510151168097611fb5565b9560206138538388612518565b5101515189106138a9575b88604061386b8489612518565b510151518110613880575b5050600101613821565b97611bed6138a19261389b859b6040612cc76001988d612518565b516121f0565b969088613876565b936138c290611bed8661389b8c6020612cc7888d612518565b9361385e565b509591909360019395816138e3575b505050019290916137fd565b6138f08261390194611fc2565b6138fb858b51612518565b52611fc2565b61390c828551612518565b523880806138d7565b5090565b805115613b705761392981613e22565b9061393382612bd1565b9160005b8181106139445750505090565b9091936139518551612bd1565b92600091825b87518110156139a957600190602061396f828b612518565b5101518681518110613984575b505001613957565b61398d91612518565b516139a161399a87612c03565b9689612518565b52388661397c565b509593909291806139bf575b5050600101613937565b6139ce81969492959396612bd1565b9460005b828110613b5157505050835115613b40576139ed8451612bd1565b9560005b8551811015613a195780613a0760019288612518565b51613a12828b612518565b52016139f1565b5060009594505b865160001981019081116108f557861015613aca5760005b613a43878951612f89565b60001981019081116108f557811015613abe57613a608189612518565b5190600181018082116108f557600192613a7a828c612518565b5110613a88575b5001613a38565b613ab7613a95838c612518565b519160008c613aaf86613aa88584612518565b5192612518565b52508b612518565b5238613a81565b50600190950194613a20565b95919390929450600182511615600014613b2a57815160011c60001981019081116108f55782613b0e613b02613b1593600196612518565b51918051861c90612518565b5190611fb5565b821c5b613b228287612518565b5290386139b5565b613b3a8260019351841c90612518565b51613b18565b63b5b654e760e01b60005260046000fd5b80613b5e60019284612518565b51613b69828a612518565b52016139d2565b50604051612e37602082611e86565b805115613b7057613b8f81613e22565b90613b9982612bd1565b9160005b818110613baa5750505090565b909193613bb78551612bd1565b92600091825b8751811015613c08576001906040613bd5828b612518565b5101518681518110613bea575b505001613bbd565b613bf391612518565b51613c0061399a87612c03565b523886613be2565b50959390929180613c1e575b5050600101613b9d565b613c2d81969492959396612bd1565b9460005b828110613d6a57505050835115613b4057613c4c8451612bd1565b9560005b8551811015613c785780613c6660019288612518565b51613c71828b612518565b5201613c50565b5060009594505b865160001981019081116108f557861015613d075760005b613ca2878951612f89565b60001981019081116108f557811015613cfb57613cbf8189612518565b5190600181018082116108f557600192613cd9828c612518565b5110613ce7575b5001613c97565b613cf4613a95838c612518565b5238613ce0565b50600190950194613c7f565b95919390929450600182511615600014613d5457815160011c60001981019081116108f55782613b0e613b02613d3f93600196612518565b821c5b613d4c8287612518565b529038613c14565b613d648260019351841c90612518565b51613d42565b80613d7760019284612518565b51613d82828a612518565b5201613c31565b90600182511115613e1c57613d9d82613ecd565b600092835b8151851015613e0457613de060019184613dbc8886612518565b511115613de857611bed613dda86613dd48a88612518565b51612f89565b806121f0565b940193613da2565b611bed613dff613df88987612518565b5187612f89565b613dda565b90611e4d939450613e1792505190611fc2565b613f08565b60009150565b906000805b8351811015613e9a57816020613e3d8387612518565b5101515111613e82575b816040613e548387612518565b5101515111613e66575b600101613e27565b905060016040613e768386612518565b51015151919050613e5e565b90506020613e908285612518565b5101515190613e47565b509150565b60ff600080516020613feb8339815191525460401c1615613ebc57565b631afcd79f60e31b60005260046000fd5b90815115613e1c576000805b8351821015613efa57613ef2600191613b0e8487612518565b910190613ed9565b9050611e4d91925190611fc2565b908115613e1c57600182018083116108f55760011c825b838210613f2a575050565b909250613f4083613f3b8184611fc2565b611fb5565b60011c90613f1f565b90613f6f5750805115613f5e57602081519101fd5b63d6bda27560e01b60005260046000fd5b81511580613fa1575b613f80575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b15613f7856fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220b82aceb4c7701f7a4de80975432c3750d621927f3bfb6d0b96122076fb0058fa64736f6c634300081c0033";

type ConsensusEngineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConsensusEngineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConsensusEngine__factory extends ContractFactory {
  constructor(...args: ConsensusEngineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConsensusEngine & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConsensusEngine__factory {
    return super.connect(runner) as ConsensusEngine__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConsensusEngineInterface {
    return new Interface(_abi) as ConsensusEngineInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConsensusEngine {
    return new Contract(address, _abi, runner) as unknown as ConsensusEngine;
  }
}
